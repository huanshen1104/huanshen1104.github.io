<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用acme.sh申请免费的HTTPS证书</title>
    <url>/2021/08/15/%E4%BD%BF%E7%94%A8acme-sh%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9%E7%9A%84HTTPS%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<p>最近打算给自己的网站申请免费的HTTPS证书，经过多番搜索相关资料，最后将其实际应用到了自己的网站上，在此记录下整个过程，以做备份。</p>
<span id="more"></span>

<h1 id="安装acme-sh"><a href="#安装acme-sh" class="headerlink" title="安装acme.sh"></a>安装acme.sh</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://get.acme.sh | sh</span><br></pre></td></tr></table></figure>
<p>该安装脚本做了几件事：</p>
<ol>
<li>把 acme.sh 安装到了 home 目录下：~/.acme.sh/</li>
<li>创建了一个 bash 的 alias, 方便使用: alias acme.sh=~/.acme.sh/acme.sh</li>
<li>创建了cronjob，每天 0:00点自动检测所有的证书，如果快过期了，则会自动更新证书。</li>
</ol>
<p>如果因为网络问题，无法连接到 <a href="https://raw.githubusercontent.com/">https://raw.githubusercontent.com</a> 域名，则要手动更改安装脚本内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载并保存脚本</span><br><span class="line">curl https://get.acme.sh -o acme_install.sh</span><br><span class="line"># 更改脚本内域名，使用代理加速</span><br><span class="line">sed -i &#x27;s/raw/ghproxy.com\/https:\/\/raw/g&#x27; acme_install.sh</span><br><span class="line"># 安装</span><br><span class="line">chmod +x acme_install.sh</span><br><span class="line">./acme_install.sh</span><br></pre></td></tr></table></figure>

<h1 id="注册-ZeroSSL-账号"><a href="#注册-ZeroSSL-账号" class="headerlink" title="注册 ZeroSSL 账号"></a>注册 ZeroSSL 账号</h1><blockquote>
<p><strong>acme.sh 默认使用 Let’s Encrypt 进行证书注册，本文使用 ZeroSSL 进行注册，所以需要进行相关配置</strong></p>
</blockquote>
<p>官网注册：<a href="https://zerossl.com/">https://zerossl.com/</a></p>
<p>注册完成之后进入 Dashboard，选择右侧的 Developer 标签，生成 <strong>EAB Credentials</strong> 并记录下来。</p>
<h1 id="将-acme-sh-的注册服务器改为-ZeroSSL"><a href="#将-acme-sh-的注册服务器改为-ZeroSSL" class="headerlink" title="将 acme.sh 的注册服务器改为 ZeroSSL"></a>将 acme.sh 的注册服务器改为 ZeroSSL</h1><blockquote>
<p>文档：<a href="https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA">https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA</a></p>
</blockquote>
<p>运行，替换 eab-kid 和 eab-hmac-key 为上一步中生成的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acme.sh --register-account --server zerossl \</span><br><span class="line">        --eab-kid xxxxxxxxxxxx  \</span><br><span class="line">        --eab-hmac-key xxxxxxxxx</span><br></pre></td></tr></table></figure>
<p>将其设置为默认 Server</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acme.sh --set-default-ca --server zerossl</span><br></pre></td></tr></table></figure>

<h1 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h1><p>本文章使用 DNS 验证的方法来验证域名，acme.sh 可以通过 DNS 提供商的 API 自动设置验证记录，具体用法详见文档：<a href="https://github.com/acmesh-official/acme.sh/wiki/dnsapi">https://github.com/acmesh-official/acme.sh/wiki/dnsapi</a><br>常用的 CloudFlare 、 DNSPod 、 CloudXNS 、阿里云 等DNS服务都支持</p>
<h2 id="dns方式验证域名获取证书"><a href="#dns方式验证域名获取证书" class="headerlink" title="dns方式验证域名获取证书"></a>dns方式验证域名获取证书</h2><p>这里以阿里云为例，登录其后台找到账号的秘钥，执行下面命令即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export Ali_Key=&quot;****************************&quot;</span><br><span class="line">export Ali_Secret=&quot;**************************&quot; </span><br></pre></td></tr></table></figure>

<p>获取证书，可以同时跟多个域名（子域名）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acme.sh --issue \</span><br><span class="line">        --dns dns_ali \</span><br><span class="line">        -d example.com \</span><br><span class="line">        -d *.example.com</span><br></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><p>–dns 指定 DNS 服务商，dns_ali 代表阿里云，还有 dns_cf 代表 CloudFlare，更多的字段见 <a href="https://github.com/acmesh-official/acme.sh/tree/master/dnsapi">https://github.com/acmesh-official/acme.sh/tree/master/dnsapi</a></p>
<p>如果不使用 API 自动添加验证，则不用添加后续参数，如：acme.sh –issue –dns -d example.com ….</p>
</li>
<li><p>-d *.example.com 表示签发泛域名证书</p>
</li>
</ul>
<p>执行命令之后看输出的内容可以确定证书所在位置，这时就申请成功了。</p>
<h1 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh acme.sh  --installcert  -d example.com   \</span><br><span class="line">        --keypath   /var/www/ssl/private.key \ </span><br><span class="line">        --fullchainpath /var/www/ssl/chained.pem \</span><br><span class="line">        --reloadcmd  &quot;service nginx force-reload&quot;</span><br></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><del>–ecc 表示安装 ECC 证书</del></li>
<li>–key-file 和 -fullchain-file 后接想要安装到的目录及证书名</li>
<li>–reloadcmd 后接服务的重启命令，程序自动续期证书后会运行该命令使其生效</li>
</ul>
<h1 id="启用https服务"><a href="#启用https服务" class="headerlink" title="启用https服务"></a>启用https服务</h1><p>修改服务器的配置文件启用HTTPS，下面以nginx为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen               443 ssl;</span><br><span class="line"></span><br><span class="line">    server_name          www.example.com example.com;</span><br><span class="line"></span><br><span class="line">    ssl_certificate      /var/www/ssl/chained.pem; #对应上面步骤安装证书后的路径</span><br><span class="line">    ssl_certificate_key  /var/www/ssl/private.key;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header         Host             example.com;</span><br><span class="line">        proxy_set_header         X-Real_IP        $remote_addr;</span><br><span class="line">        proxy_set_header         X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_pass               http://127.0.0.1:2368;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  *.example.com example.com;</span><br><span class="line"></span><br><span class="line">    return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>配置好后，重启服务器即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure>

<p>最后，记得去阿里云后台打开服务器443端口。</p>
<p>大功告成！</p>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>《小狗钱钱》书中的精华都在这了</title>
    <url>/2020/09/24/%E3%80%8A%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
    <content><![CDATA[<h3 id="初见"><a href="#初见" class="headerlink" title="初见"></a>初见</h3><p>初次看《小狗钱钱》，竟有一种莫名的感动，在我看来，书中的小狗钱钱，就像来自未来的次世代机器人，通晓世间的一切，而它愿意把关于金钱的一切都告诉主人公，我就这样跟随着主人公的脚步，贪婪的吸收着他们之间交流的一切，生怕错过了这一窥探金钱真谛的机会。</p>
<span id="more"></span>
<p>可以说，这本书就是《富爸爸穷爸爸》的童话版，虽然讲的道理大同小异，但是作者用更通俗易懂、更具实操性的叙述方式，将自身实现财务自由所用到的武功招式及内功心法一一展示给读者，使读者读来神清气爽，一气呵成，易于接受，是学习理财不可多得的入门书籍。</p>
<p>那么，在金钱这件事上，小狗钱钱都告诉了我们哪些东西来帮助我们变得富有呢，我在这里总结一下其中具有实操性的内容，也算是自我学习。</p>
<h4 id="1-愿望清单"><a href="#1-愿望清单" class="headerlink" title="1. 愿望清单"></a>1. 愿望清单</h4><p>列出自己想要变得富有的愿望清单，说的直白点就是，我为什么要有很多钱，这些钱将用于实现我的哪些愿望，越具体越好，就像这样：</p>
<ul>
<li><em>去某个城市旅行√</em></li>
<li><em>拥有一辆代步车√</em></li>
<li><em>拥有一套大房子√</em></li>
<li>…</li>
</ul>
<blockquote>
<p>思考：这个做法就是挖掘自己想要变得富有的具体原因，清楚自己想要的是什么</p>
</blockquote>
<h4 id="2-制作梦想相册"><a href="#2-制作梦想相册" class="headerlink" title="2. 制作梦想相册"></a>2. 制作梦想相册</h4><p>选出最想要实现的愿望，将其有关的照片制作成梦想相册，每天看几遍，并想象愿望已经实现后的情景，体会那种快感。</p>
<p>作者的底层逻辑：把想象的东西视觉化，你的愿望就更容易实现，这其中的道理不需要深究，就好像<strong>按了开关灯就会立即点亮</strong>一样简单，你只需要做这件事就好了。</p>
<h4 id="3-梦想储蓄蓄罐"><a href="#3-梦想储蓄蓄罐" class="headerlink" title="3. 梦想储蓄蓄罐"></a>3. 梦想储蓄蓄罐</h4><p>为相对较容易实现的愿望准备梦想储蓄罐并坚持定期向每个梦想储蓄罐存钱，直至实现。<br>如：旅行、代步车这些相对较小的愿望可以准备梦想储蓄罐。</p>
<p>作者的底层逻辑：<br>只有不断地向梦想储蓄罐存钱，你才会紧盯目标，并以目标为激励，寻找一切可实现目标的机会，一步步实现每一个愿望。就像书中的主人公一样，为了能去国外学习，他拼命的想尽一切办法赚钱，这种愿望是具体而强烈的。</p>
<blockquote>
<p>思考：</p>
<p>梦想相册和梦想储蓄罐两个方法是为了持续性的强化自己的愿望，人性是懒惰的，即使心中有愿望，如果不足够强烈，很容易就淹没在生活的琐事中，然而作者已经为我们指出了行之有效的方法，我们只需要照着做就行了，它是否起作用不必深究，作者已经用自己的实际行动帮我们验证过了，相信即可，如同按下开关灯就会亮那样简单。</p>
<p>梦想储蓄罐还有一个非常重要的作用：专款专用，避免透支消费。</p>
</blockquote>
<h4 id="4-遵循72小时原则"><a href="#4-遵循72小时原则" class="headerlink" title="4. 遵循72小时原则"></a>4. 遵循72小时原则</h4><p>如果决定去做一件事，必须在72小时之内开始，否则很可能永远不会开始。</p>
<p>作者的底层逻辑：以上提到的三点必须马上开始去做，并且不能抱着「试试看」的心态，必须切实认真的去执行，否则就等于还没有做就已经给自己想好了退路，不能实验，<strong>只有两个选择——做或者不做</strong>。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>不难发现，作者实际上是按照 <strong>确定目标——强化目标——实现目标</strong> 的思路，为我们量身定制了实操性极强的方法来帮助我们建立富人的思维及行为模式，道理很简单，难点就在于持续坚持，如果我们能把这些方法贯彻始终，即使最终不能实现财务自由，至少也不会出现太严重的财务问题。而在现实生活中，我看到很多朋友因为信用卡透支严重，每个月都要借钱填补窟窿，这就是对金钱没有任何规划造成的。</p>
<p>有人说要先有钱才能理财，实际上理财首先需要提升的是正确规划资金的认知，而不是如何变得有钱，只有认知改变了，才能以正确的方式对待金钱，最终才能朝着财务自由的方向行走。</p>
<p>财务自由这个愿望足够大，它更多的是对金钱的观念上的改变，具体的说，就是对金钱的合理规划的一系列方法，当我们开始使用这些方法去分配我们的金钱，我们实际上就已经开始用富人的思维思考，梦想储蓄罐这个做法，就是我们初尝这些方法的第一步。</p>
<p>当然，以上只是书中的一部分内容，也是我认为比较重要又容易被忽视的东西，因为它足够简单，但是大道至简，需持之以恒，才能体现出它的作用。书中还介绍了很多其它关于理财（如投资基金股票）的知识，如果说前面我总结的是如何修炼内功心法的话，那么这些就是具体的武功招式了，感兴趣的朋友一定要去看一看。</p>
]]></content>
      <categories>
        <category>开卷有益</category>
      </categories>
      <tags>
        <tag>理财</tag>
      </tags>
  </entry>
</search>
